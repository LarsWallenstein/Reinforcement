{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"frozen_lake_q_iteration","version":"0.3.2","provenance":[],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"metadata":{"id":"Pzr9bDMD-FMu","colab_type":"code","colab":{}},"cell_type":"code","source":["import gym\n","import collections"],"execution_count":0,"outputs":[]},{"metadata":{"id":"m8drVaU1-0Qd","colab_type":"code","colab":{}},"cell_type":"code","source":["!pip install tensorboardX"],"execution_count":0,"outputs":[]},{"metadata":{"id":"dZb-Ir3p-90j","colab_type":"code","colab":{}},"cell_type":"code","source":["from tensorboardX import SummaryWriter"],"execution_count":0,"outputs":[]},{"metadata":{"id":"6sjFPV9B_FWK","colab_type":"code","colab":{}},"cell_type":"code","source":["#Global Variables\n","\n","ENV_NAME = \"FrozenLake-v0\"\n","GAMMA = 0.9\n","TEST_EPISODES = 20"],"execution_count":0,"outputs":[]},{"metadata":{"id":"cb-zBZOt_WJL","colab_type":"code","colab":{}},"cell_type":"code","source":["class Agent:\n","  def __init__(self):\n","    self.env = gym.make(ENV_NAME)\n","    self.state = self.env.reset()\n","    self.rewards = collections.defaultdict(float)\n","    self.transits = collections.defaultdict(collections.Counter)\n","    self.values = collections.defaultdict(float)\n","    \n","  def play_n_random_steps(self, count):\n","    for _ in range(count):\n","      action = self.env.action_space.sample()\n","      new_state, reward, is_done, _ = self.env.step(action)\n","      self.rewards[(self.state, action, new_state)] = reward\n","      self.transits[(self.state, action)][new_state] += 1\n","      self.state = self.env.reset() if is_done else new_state\n","      \n","  def select_action(self, state):\n","    best_action, best_value = None, None\n","    for action in range(self.env.action_space.n):\n","      action_value = self.values[(state, action)]\n","      if best_value is None or best_value < action_value:\n","        best_value = action_value\n","        best_action = action\n","    return best_action\n","  \n","  def play_episode(self, env):\n","    total_reward = 0.0\n","    state = env.reset()\n","    while True:\n","      action = self.select_action(state)\n","      new_state, reward, is_done, _ = env.step(action)\n","      self.rewards[(state, action, new_state)] = reward\n","      self.transits[(state, action)][new_state] += 1\n","      total_reward += reward\n","      if is_done:\n","        break\n","      state = new_state\n","    return total_reward\n","  \n","  def value_iteration(self):\n","    for state in range(self.env.observation_space.n):\n","      for action in range(self.env.action_space.n):\n","        action_value = 0.0\n","        target_counts = self.transits[(state, action)]\n","        total = sum(target_counts.values())\n","        for tgt_state, count in target_counts.items():\n","          reward = self.rewards[(state, action, tgt_state)]\n","          best_action = self.select_action(tgt_state)\n","          action_value += (count/ total)*(reward+GAMMA*self.values[(tgt_state, best_action)])\n","        self.values[(state, action)] = action_value"],"execution_count":0,"outputs":[]},{"metadata":{"id":"mL-46XgKGT7W","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":153},"outputId":"e565ed70-dcd1-4ecb-da1b-cf4b88fa743c","executionInfo":{"status":"ok","timestamp":1555585489987,"user_tz":-180,"elapsed":835,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["if __name__ == \"__main__\":\n","  test_env = gym.make(ENV_NAME)\n","  agent = Agent()\n","  writer = SummaryWriter(comment=\"q-iteration\")\n","  \n","  iter_no = 0\n","  best_reward = 0.0\n","  while True:\n","    iter_no+=1\n","    agent.play_n_random_steps(100)\n","    agent.value_iteration()\n","    \n","    reward = 0.0\n","    for _ in range(TEST_EPISODES):\n","      reward += agent.play_episode(test_env)\n","    reward /= TEST_EPISODES\n","    writer.add_scalar(\"reward\", reward, iter_no)\n","    if reward > best_reward:\n","      print(\"Best reward updated %.3f -> %.3f\" % (best_reward, reward))\n","      best_reward = reward\n","    if reward > 0.8:\n","      print(\"Solved in %d iterations!\" % iter_no)\n","      break\n","writer.close()      "],"execution_count":12,"outputs":[{"output_type":"stream","text":["Best reward updated 0.000 -> 0.100\n","Best reward updated 0.100 -> 0.200\n","Best reward updated 0.200 -> 0.350\n","Best reward updated 0.350 -> 0.450\n","Best reward updated 0.450 -> 0.600\n","Best reward updated 0.600 -> 0.800\n","Best reward updated 0.800 -> 0.900\n","Solved in 36 iterations!\n"],"name":"stdout"}]},{"metadata":{"id":"7Mm5IlTuHg-l","colab_type":"code","colab":{"base_uri":"https://localhost:8080/","height":34},"outputId":"1900a84b-a659-4fb3-b369-73fe92a8a7b0","executionInfo":{"status":"ok","timestamp":1555585639942,"user_tz":-180,"elapsed":793,"user":{"displayName":"Alex Korsakov","photoUrl":"","userId":"18248625518508782982"}}},"cell_type":"code","source":["print(agent.play_episode(test_env))"],"execution_count":17,"outputs":[{"output_type":"stream","text":["1.0\n"],"name":"stdout"}]},{"metadata":{"id":"FxcZuqwYH4jG","colab_type":"code","colab":{}},"cell_type":"code","source":[""],"execution_count":0,"outputs":[]}]}